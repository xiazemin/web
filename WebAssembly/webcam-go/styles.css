html, body {
    height: 100%;
}

body {
    background: radial-gradient(ellipse at center, #43C6AC 0%,#191654 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    padding-top: 0px;
    font-family: 'Open Sans', sans-serif;
    color: #FFFFFF;
    display: flex;
    flex-direction: column;
    margin: 0;
}

h1 {
    font-family: "Bubblegum Sans";
    font-size: 46px;
    color: #FFFFFF;
    text-align: center;
    font-weight: normal;
}

footer {
    left: 5px;
    padding-bottom: 10px;
    color:#FFFFFF;
    text-align: center;
    font-size: 16px;
    flex-shrink: 0;
}

footer a {
    color:#FFFFFF;
}

#video {
    width: 1px;
    height: 1px;
}

.video h2 {
    font-family: "Bubblegum Sans";
    font-size: 34px;
    color: #191654;
    text-align: center;
    font-weight: normal;
    position: absolute;
    top: 140px;
    left: 106px;
    z-index: 0;
}

.container {
    margin: auto;
    flex: 1 0 auto;
    padding-top: 50px;
}

.content > div.top {
    padding-bottom: 10px;
}

div.top:after {
    content: "";
    display: table;
    clear: both;
}

.container .video {
    width: 800px; height: 800px;
    position: relative;
    float: left;
}

.video:after, .video:before{
    mix-blend-mode:multiply;
    filter:none;
    z-index: -1;
    content:'';
    width:calc(100% + (50px * 2));
    height:calc(100% + (50px * 2));
    position: absolute;
    display: block;
    animation: border 10s ease-in-out infinite;
    transform:translateX(-50px) translateY(-50px);
}
@keyframes border {
    0%, 100% {
        -webkit-clip-path: polygon(0 0, calc(100% - (33.3333333333px)) calc(0% + (33.3333333333px)), 100% 100%, calc(0% + (33.3333333333px)) calc(100% - (33.3333333333px)));
        clip-path: polygon(0 0, calc(100% - (33.3333333333px)) calc(0% + (33.3333333333px)), 100% 100%, calc(0% + (33.3333333333px)) calc(100% - (33.3333333333px)));
    }
    50% {
        -webkit-clip-path: polygon(calc(0% + (33.3333333333px)) calc(0% + (33.3333333333px)), 100% 0, calc(100% - (33.3333333333px)) calc(100% - (33.3333333333px)), 0 100%);
        clip-path: polygon(calc(0% + (33.3333333333px)) calc(0% + (33.3333333333px)), 100% 0, calc(100% - (33.3333333333px)) calc(100% - (33.3333333333px)), 0 100%);
    }
}

.video:after{
    animation-delay: -5s;
    background-color: #93e1d8;
    clip-path: polygon(0 0, calc(100% - (33.3333333333px)) calc(0% + (33.3333333333px)), 100% 100%, calc(0% + (33.3333333333px)) calc(100% - (33.3333333333px)));
}
.video:before {
    background-color: #AA4465;
    clip-path: polygon(calc(0% + (33.3333333333px)) calc(0% + (33.3333333333px)), 100% 0, calc(100% - (33.3333333333px)) calc(100% - (33.3333333333px)), 0 100%);
}

.video:hover:after{
    animation-delay: -0.1s;
}
.video:hover:before, .video:hover:after {

    animation-duration: 0.2s;
}


.video #canvas {
    z-index: 5;
    position: absolute;
}

.container .video #fps {
    position: absolute;
    top: 130px;
    right: 70px;
    font-size: 15px;
    background: rgba(0,0,0,0.5);
    padding: 5px;
    z-index: 10;
}

.container .controls {
    position: absolute;
    top: 655px;
    left: 320px;
    width: 100px;
    z-index: 10;
    display: flex;
    justify-content: space-evenly;
}

.switch-option {
    padding-left: 50px;
}

.switch-option span {
    margin-top: 5px;
    outline: none;
    padding-left: 50px;
    box-shadow: 1px 1px 0px 0px rgba(0,0,0,0.5) inset;
}

.switch-option span a {
    outline: none!important;
    box-shadow: 1px 1px 0px 0px rgba(0,0,0,0.5);
}

#template, #capture {
    display: none;
}

@charset "UTF-8";
/*
* CSS TOGGLE SWITCH
*
* IonuÈ› Colceriu - ghinda.net
* https://github.com/ghinda/css-toggle-switch
*
*/
/* supported values are px, rem-calc, em-calc
 */
/* imports
 */
/* Functions
 */
/* Shared
 */
/* Hide by default
 */
.switch-toggle a,
.switch-light span span {
    display: none; }

/* We can't test for a specific feature,
 * so we only target browsers with support for media queries.
 */
@media only screen {
    /* Checkbox
   */
    .switch-light {
        position: relative;
        display: block;
        /* simulate default browser focus outlines on the switch,
       * when the inputs are focused.
       */ }
    .switch-light::after {
        clear: both;
        content: '';
        display: table; }
    .switch-light *,
    .switch-light *:before,
    .switch-light *:after {
        box-sizing: border-box; }
    .switch-light a {
        display: block;
        transition: all 0.2s ease-out; }
    .switch-light label,
    .switch-light > span {
        /* breathing room for bootstrap/foundation classes.
       */
        line-height: 2em; }
    .switch-light input:focus ~ span a,
    .switch-light input:focus + label {
        outline-width: 2px;
        outline-style: solid;
        outline-color: Highlight;
        /* Chrome/Opera gets its native focus styles.
       */ } }
@media only screen and (-webkit-min-device-pixel-ratio: 0) {
    .switch-light input:focus ~ span a,
    .switch-light input:focus + label {
        outline-color: -webkit-focus-ring-color;
        outline-style: auto; } }

@media only screen {
    /* don't hide the input from screen-readers and keyboard access
   */
    .switch-light input {
        position: absolute;
        opacity: 0;
        z-index: 3; }
    .switch-light input:checked ~ span a {
        right: 0%; }
    /* inherit from label
   */
    .switch-light strong {
        font-weight: inherit; }
    .switch-light > span {
        position: relative;
        overflow: hidden;
        display: block;
        min-height: 2em;
        /* overwrite 3rd party classes padding
       * eg. bootstrap .alert
       */
        padding: 0;
        text-align: left; }
    .switch-light span span {
        position: relative;
        z-index: 2;
        display: block;
        float: left;
        width: 50%;
        text-align: center;
        user-select: none; }
    .switch-light a {
        position: absolute;
        right: 50%;
        top: 0;
        z-index: 1;
        display: block;
        width: 50%;
        height: 100%;
        padding: 0; }
    /* bootstrap 4 tweaks
  */
    .switch-light.row {
        display: flex; }
    .switch-light .alert-light {
        color: #333; }
    /* Radio Switch
   */
    .switch-toggle {
        position: relative;
        display: block;
        /* simulate default browser focus outlines on the switch,
       * when the inputs are focused.
       */
        /* For callout panels in foundation
      */
        padding: 0 !important;
        /* 2 items
       */
        /* 3 items
       */
        /* 4 items
       */
        /* 5 items
       */
        /* 6 items
       */ }
    .switch-toggle::after {
        clear: both;
        content: '';
        display: table; }
    .switch-toggle *,
    .switch-toggle *:before,
    .switch-toggle *:after {
        box-sizing: border-box; }
    .switch-toggle a {
        display: block;
        transition: all 0.2s ease-out; }
    .switch-toggle label,
    .switch-toggle > span {
        /* breathing room for bootstrap/foundation classes.
       */
        line-height: 2em; }
    .switch-toggle input:focus ~ span a,
    .switch-toggle input:focus + label {
        outline-width: 2px;
        outline-style: solid;
        outline-color: Highlight;
        /* Chrome/Opera gets its native focus styles.
       */ } }
@media only screen and (-webkit-min-device-pixel-ratio: 0) {
    .switch-toggle input:focus ~ span a,
    .switch-toggle input:focus + label {
        outline-color: -webkit-focus-ring-color;
        outline-style: auto; } }

@media only screen {
    .switch-toggle input {
        position: absolute;
        left: 0;
        opacity: 0; }
    .switch-toggle input + label {
        position: relative;
        z-index: 2;
        display: block;
        float: left;
        padding: 0 0.5em;
        margin: 0;
        text-align: center; }
    .switch-toggle a {
        position: absolute;
        top: 0;
        left: 0;
        padding: 0;
        z-index: 1;
        width: 10px;
        height: 100%; }
    .switch-toggle label:nth-child(2):nth-last-child(4),
    .switch-toggle label:nth-child(2):nth-last-child(4) ~ label,
    .switch-toggle label:nth-child(2):nth-last-child(4) ~ a {
        width: 50%; }
    .switch-toggle label:nth-child(2):nth-last-child(4) ~ input:checked:nth-child(3) + label ~ a {
        left: 50%; }
    .switch-toggle label:nth-child(2):nth-last-child(6),
    .switch-toggle label:nth-child(2):nth-last-child(6) ~ label,
    .switch-toggle label:nth-child(2):nth-last-child(6) ~ a {
        width: 33.33%; }
    .switch-toggle label:nth-child(2):nth-last-child(6) ~ input:checked:nth-child(3) + label ~ a {
        left: 33.33%; }
    .switch-toggle label:nth-child(2):nth-last-child(6) ~ input:checked:nth-child(5) + label ~ a {
        left: 66.66%; }
    .switch-toggle label:nth-child(2):nth-last-child(8),
    .switch-toggle label:nth-child(2):nth-last-child(8) ~ label,
    .switch-toggle label:nth-child(2):nth-last-child(8) ~ a {
        width: 25%; }
    .switch-toggle label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(3) + label ~ a {
        left: 25%; }
    .switch-toggle label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(5) + label ~ a {
        left: 50%; }
    .switch-toggle label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(7) + label ~ a {
        left: 75%; }
    .switch-toggle label:nth-child(2):nth-last-child(10),
    .switch-toggle label:nth-child(2):nth-last-child(10) ~ label,
    .switch-toggle label:nth-child(2):nth-last-child(10) ~ a {
        width: 20%; }
    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(3) + label ~ a {
        left: 20%; }
    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(5) + label ~ a {
        left: 40%; }
    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(7) + label ~ a {
        left: 60%; }
    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(9) + label ~ a {
        left: 80%; }
    .switch-toggle label:nth-child(2):nth-last-child(12),
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ label,
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ a {
        width: 16.6%; }
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(3) + label ~ a {
        left: 16.6%; }
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(5) + label ~ a {
        left: 33.2%; }
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(7) + label ~ a {
        left: 49.8%; }
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(9) + label ~ a {
        left: 66.4%; }
    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(11) + label ~ a {
        left: 83%; }

    /* Material Theme
   */
    /* switch-light
   */
    .switch-light.switch-material a {
        top: -0.1875em;
        width: 1.75em;
        height: 1.75em;
        border-radius: 50%;
        background: #FFFFFF;
        box-shadow: 0 0.125em 0.125em 0 rgba(0, 0, 0, 0.14), 0 0.1875em 0.125em -0.125em rgba(0, 0, 0, 0.2), 0 0.125em 0.25em 0 rgba(0, 0, 0, 0.12);
        transition: right 0.28s cubic-bezier(0.4, 0, 0.2, 1); }
    .switch-material.switch-light {
        overflow: visible; }
    .switch-material.switch-light::after {
        clear: both;
        content: '';
        display: table; }
    .switch-material.switch-light > span {
        overflow: visible;
        position: relative;
        top: 0.1875em;
        width: 3.25em;
        height: 1.5em;
        min-height: auto;
        border-radius: 1em;
        background: rgba(0, 0, 0, 0.26); }
    .switch-material.switch-light span span {
        position: absolute;
        clip: rect(0 0 0 0); }
    .switch-material.switch-light input:checked ~ span a {
        right: 0;
        /* background: #3f51b5; */
    }
    .switch-material.switch-light input:checked ~ span {
    }
    /* switch-toggle
   */
    .switch-toggle.switch-material {
        overflow: visible; }
    .switch-toggle.switch-material::after {
        clear: both;
        content: '';
        display: table; }
    .switch-toggle.switch-material a {
        top: 48%;
        width: 0.375em !important;
        height: 0.375em;
        margin-left: 0.25em;
        background: #3f51b5;
        border-radius: 100%;
        transform: translateY(-50%);
        transition: transform .4s ease-in; }
    .switch-toggle.switch-material label {
        color: rgba(0, 0, 0, 0.54);
        font-size: 1em; }
    .switch-toggle.switch-material label:before {
        content: '';
        position: absolute;
        top: 48%;
        left: 0;
        display: block;
        width: 0.875em;
        height: 0.875em;
        border-radius: 100%;
        border: 0.125em solid rgba(0, 0, 0, 0.54);
        transform: translateY(-50%); }
    .switch-toggle.switch-material input:checked + label:before {
        border-color: #3f51b5; }
    /* ripple
   */
    .switch-light.switch-material > span:before,
    .switch-light.switch-material > span:after,
    .switch-toggle.switch-material label:after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        z-index: 3;
        display: block;
        width: 4em;
        height: 4em;
        border-radius: 100%;
        background: #3f51b5;
        opacity: .4;
        margin-left: -1.25em;
        margin-top: -1.25em;
        transform: scale(0);
        transition: opacity .4s ease-in; }
    .switch-light.switch-material > span:after {
        left: auto;
        right: 0;
        margin-left: 0;
        margin-right: -1.25em; }
    .switch-toggle.switch-material label:after {
        width: 3.25em;
        height: 3.25em;
        margin-top: -0.75em; }

    .switch-material.switch-light input:not(:checked) ~ span:after,
    .switch-material.switch-light input:checked ~ span:before,
    .switch-toggle.switch-material input:checked + label:after {
        animation: materialRipple .4s ease-in; }
    /* trick to prevent the default checked ripple animation from showing
   * when the page loads.
   * the ripples are hidden by default, and shown only when the input is focused.
   */
    .switch-light.switch-material.switch-light input ~ span:before,
    .switch-light.switch-material.switch-light input ~ span:after,
    .switch-material.switch-toggle input + label:after {
        visibility: hidden; }
    .switch-light.switch-material.switch-light input:focus:checked ~ span:before,
    .switch-light.switch-material.switch-light input:focus:not(:checked) ~ span:after,
    .switch-material.switch-toggle input:focus:checked + label:after {
        visibility: visible; } }

/* Bugfix for older Webkit, including mobile Webkit. Adapted from
 * http://css-tricks.com/webkit-sibling-bug/
 */
@media only screen and (-webkit-max-device-pixel-ratio: 2) and (max-device-width: 80em) {
    .switch-light,
    .switch-toggle {
        -webkit-animation: webkitSiblingBugfix infinite 1s; } }

@-webkit-keyframes webkitSiblingBugfix {
    from {
        -webkit-transform: translate3d(0, 0, 0); }
    to {
        -webkit-transform: translate3d(0, 0, 0); } }
